/*! WysiBB v1.5.1 2014-03-26 
    Author: Vadim Dobroskok
 */
typeof WBBLANG == "undefined" && (WBBLANG = {}),
WBBLANG.en = CURLANG = {
bold: "Bold", italic: "Italic", underline: "Underline", strike: "Strike", link: "Link", img: "Insert image", sup: "Superscript", sub: "Subscript", justifyleft: "Align left", justifycenter: "Align center", justifyright: "Align right", table: "Insert table", bullist: "• Unordered list", numlist: "1. Ordered list", quote: "Quote", offtop: "Offtop", code: "Code", spoiler: "Spoiler", fontcolor: "Font color", fontsize: "Font size", fontfamily: "Font family", fs_verysmall: "Very small", fs_small: "Small", fs_normal: "Normal", fs_big: "Big", fs_verybig: "Very big", smilebox: "Insert emoticon", video: "Insert YouTube", removeFormat: "Remove Format", modal_link_title: "Insert link", modal_link_text: "Display text", modal_link_url: "URL", modal_email_text: "Display email", modal_email_url: "Email", modal_link_tab1: "Insert URL", modal_img_title: "Insert image", modal_img_tab1: "Insert URL", modal_img_tab2: "Upload image", modal_imgsrc_text: "Enter image URL", modal_img_btn: "Choose file", add_attach: "Add Attachment", modal_video_text: "Enter the URL of the video", close: "Close", save: "Save", cancel: "Cancel", remove: "Delete", validation_err: "The entered data is invalid", error_onupload: "Error during file upload", fileupload_text1: "Drop file here", fileupload_text2: "or", loading: "Loading", auto: "Auto", views: "Views", downloads: "Downloads", sm1: "Smile", sm2: "Laughter", sm3: "Wink", sm4: "Thank you", sm5: "Scold", sm6: "Shock", sm7: "Angry", sm8: "Pain", sm9: "Sick"
},
wbbdebug = !1,
function(n)
{
n.wysibb = function(t, i)
{
n(t).data("wbb", this),
i && i.deflang && typeof WBBLANG[i.deflang] != "undefined" && (CURLANG = WBBLANG[i.deflang]),
i && i.lang && typeof WBBLANG[i.lang] != "undefined" && (CURLANG = WBBLANG[i.lang]),
this.txtArea = t,
this.$txtArea = n(t);
var r=this.$txtArea.attr("id") || this.setUID(this.txtArea);
this.options = {
bbmode: !1, onlyBBmode: !1, enableModeSwitch: !0, themeName: "default", bodyClass: "", lang: "ru", tabInsert: !0, imgupload: !1, img_uploadurl: "/iupload.php", img_maxwidth: 800, img_maxheight: 800, hotkeys: !0, showHotkeys: !0, autoresize: !0, resize_maxheight: 500, loadPageStyles: !0, traceTextarea: !1, smileConversion: !1, buttons: "bold,italic,underline,strike,sup,sub,|,img,video,link,|,bullist,numlist,|,fontcolor,fontsize,fontfamily,|,justifyleft,justifycenter,justifyright,|,quote,code,table,removeFormat", allButtons: {
bold: {
title: CURLANG.bold, buttonHTML: '<span class="fonticon ve-tlb-bold1"><\/span>', excmd: "bold", hotkey: "ctrl+b", transform: {
"<b>{SELTEXT}<\/b>": "[b]{SELTEXT}[/b]", "<strong>{SELTEXT}<\/strong>": "[b]{SELTEXT}[/b]"
}
}, italic: {
title: CURLANG.italic, buttonHTML: '<span class="fonticon ve-tlb-italic1"><\/span>', excmd: "italic", hotkey: "ctrl+i", transform: {
"<i>{SELTEXT}<\/i>": "[i]{SELTEXT}[/i]", "<em>{SELTEXT}<\/em>": "[i]{SELTEXT}[/i]"
}
}, underline: {
title: CURLANG.underline, buttonHTML: '<span class="fonticon ve-tlb-underline1"><\/span>', excmd: "underline", hotkey: "ctrl+u", transform: {"<u>{SELTEXT}<\/u>": "[u]{SELTEXT}[/u]"}
}, strike: {
title: CURLANG.strike, buttonHTML: '<span class="fonticon fi-stroke1 ve-tlb-strike1"><\/span>', excmd: "strikeThrough", transform: {"<del>{SELTEXT}<\/del>": "[del]{SELTEXT}[/del]"}
}, sup: {
title: CURLANG.sup, buttonHTML: '<span class="fonticon ve-tlb-sup1"><\/span>', excmd: "superscript", transform: {"<sup>{SELTEXT}<\/sup>": "[sup]{SELTEXT}[/sup]"}
}, sub: {
title: CURLANG.sub, buttonHTML: '<span class="fonticon ve-tlb-sub1"><\/span>', excmd: "subscript", transform: {"<sub>{SELTEXT}<\/sub>": "[sub]{SELTEXT}[/sub]"}
}, link: {
title: CURLANG.link, buttonHTML: '<span class="fonticon ve-tlb-link1"><\/span>', hotkey: "ctrl+shift+2", modal: {
title: CURLANG.modal_link_title, width: "500px", tabs: [{input: [{
param: "SELTEXT", title: CURLANG.modal_link_text, type: "div"
}, {
param: "URL", title: CURLANG.modal_link_url, validation: "^http(s)?://"
}]}]
}, transform: {
'<a href="{URL}">{SELTEXT}<\/a>': "[url={URL}]{SELTEXT}[/url]", '<a href="{URL}">{URL}<\/a>': "[url]{URL}[/url]"
}
}, img: {
title: CURLANG.img, buttonHTML: '<span class="fonticon ve-tlb-img1"><\/span>', hotkey: "ctrl+shift+1", addWrap: !0, modal: {
title: CURLANG.modal_img_title, width: "600px", tabs: [{
title: CURLANG.modal_img_tab1, input: [{
param: "SRC", title: CURLANG.modal_imgsrc_text, validation: "^http(s)?://.*?.(jpg|png|gif|jpeg)$"
}]
}], onLoad: this.imgLoadModal
}, transform: {
'<img src="{SRC}" />': "[img]{SRC}[/img]", '<img src="{SRC}" width="{WIDTH}" height="{HEIGHT}"/>': "[img width={WIDTH},height={HEIGHT}]{SRC}[/img]"
}
}, bullist: {
title: CURLANG.bullist, buttonHTML: '<span class="fonticon ve-tlb-list1"><\/span>', excmd: "insertUnorderedList", transform: {
"<ul>{SELTEXT}<\/ul>": "[ul]{SELTEXT}[/ul]", "<li>{SELTEXT}<\/li>": "[li]{SELTEXT}[/li]"
}
}, numlist: {
title: CURLANG.numlist, buttonHTML: '<span class="fonticon ve-tlb-numlist1"><\/span>', excmd: "insertOrderedList", transform: {
"<ol>{SELTEXT}<\/ol>": "[ol]{SELTEXT}[/ol]", "<li>{SELTEXT}<\/li>": "[li]{SELTEXT}[/li]"
}
}, quote: {
title: CURLANG.quote, buttonHTML: '<span class="fonticon ve-tlb-quote1"><\/span>', hotkey: "ctrl+shift+3", transform: {"<blockquote>{SELTEXT}<\/blockquote>": "[blockquote]{SELTEXT}[/blockquote]"}
}, code: {
title: CURLANG.code, buttonText: "[code]", hotkey: "ctrl+shift+4", onlyClearText: !0, transform: {"<code>{SELTEXT}<\/code>": "[code]{SELTEXT}[/code]"}
}, offtop: {
title: CURLANG.offtop, buttonText: "offtop", transform: {'<span style="font-size:10px;color:#ccc">{SELTEXT}<\/span>': "[offtop]{SELTEXT}[/offtop]"}
}, fontcolor: {
type: "colorpicker", title: CURLANG.fontcolor, excmd: "foreColor", valueBBname: "color", subInsert: !0, colors: "#000000,#444444,#666666,#999999,#b6b6b6,#cccccc,#d8d8d8,#efefef,#f4f4f4,#ffffff,-, \t\t\t\t\t\t\t #ff0000,#980000,#ff7700,#ffff00,#00ff00,#00ffff,#1e84cc,#0000ff,#9900ff,#ff00ff,-, \t\t\t\t\t\t\t #f4cccc,#dbb0a7,#fce5cd,#fff2cc,#d9ead3,#d0e0e3,#c9daf8,#cfe2f3,#d9d2e9,#ead1dc, \t\t\t\t\t\t\t #ea9999,#dd7e6b,#f9cb9c,#ffe599,#b6d7a8,#a2c4c9,#a4c2f4,#9fc5e8,#b4a7d6,#d5a6bd, \t\t\t\t\t\t\t #e06666,#cc4125,#f6b26b,#ffd966,#93c47d,#76a5af,#6d9eeb,#6fa8dc,#8e7cc3,#c27ba0, \t\t\t\t\t\t\t #cc0000,#a61c00,#e69138,#f1c232,#6aa84f,#45818e,#3c78d8,#3d85c6,#674ea7,#a64d79, \t\t\t\t\t\t\t #900000,#85200C,#B45F06,#BF9000,#38761D,#134F5C,#1155Cc,#0B5394,#351C75,#741B47, \t\t\t\t\t\t\t #660000,#5B0F00,#783F04,#7F6000,#274E13,#0C343D,#1C4587,#073763,#20124D,#4C1130", transform: {'<font color="{COLOR}">{SELTEXT}<\/font>': "[color={COLOR}]{SELTEXT}[/color]"}
}, table: {
type: "table", title: CURLANG.table, cols: 10, rows: 10, cellwidth: 20, transform: {
"<td>{SELTEXT}<\/td>": "[td]{SELTEXT}[/td]", "<tr>{SELTEXT}<\/tr>": "[tr]{SELTEXT}[/tr]", '<table class="wbb-table">{SELTEXT}<\/table>': "[table]{SELTEXT}[/table]"
}, skipRules: !0
}, fontsize: {
type: "select", title: CURLANG.fontsize, options: "fs_verysmall,fs_small,fs_normal,fs_big,fs_verybig"
}, fontfamily: {
type: "select", title: CURLANG.fontfamily, excmd: "fontName", valueBBname: "font", options: [{
title: "Arial", exvalue: "Arial"
}, {
title: "Comic Sans MS", exvalue: "Comic Sans MS"
}, {
title: "Courier New", exvalue: "Courier New"
}, {
title: "Georgia", exvalue: "Georgia"
}, {
title: "Lucida Sans Unicode", exvalue: "Lucida Sans Unicode"
}, {
title: "Tahoma", exvalue: "Tahoma"
}, {
title: "Times New Roman", exvalue: "Times New Roman"
}, {
title: "Trebuchet MS", exvalue: "Trebuchet MS"
}, {
title: "Verdana", exvalue: "Verdana"
}], transform: {'<font face="{FONT}">{SELTEXT}<\/font>': "[font={FONT}]{SELTEXT}[/font]"}
}, smilebox: {
type: "smilebox", title: CURLANG.smilebox, buttonHTML: '<span class="fonticon ve-tlb-smilebox1"><\/span>'
}, justifyleft: {
title: CURLANG.justifyleft, buttonHTML: '<span class="fonticon ve-tlb-textleft1"><\/span>', groupkey: "align", transform: {'<p style="text-align:left">{SELTEXT}<\/p>': "[left]{SELTEXT}[/left]"}
}, justifyright: {
title: CURLANG.justifyright, buttonHTML: '<span class="fonticon ve-tlb-textright1"><\/span>', groupkey: "align", transform: {'<p style="text-align:right">{SELTEXT}<\/p>': "[right]{SELTEXT}[/right]"}
}, justifycenter: {
title: CURLANG.justifycenter, buttonHTML: '<span class="fonticon ve-tlb-textcenter1"><\/span>', groupkey: "align", transform: {'<p style="text-align:center">{SELTEXT}<\/p>': "[center]{SELTEXT}[/center]"}
}, video: {
title: CURLANG.video, buttonHTML: '<span class="fonticon ve-tlb-video1"><\/span>', modal: {
title: CURLANG.video, width: "600px", tabs: [{
title: CURLANG.video, input: [{
param: "SRC", title: CURLANG.modal_video_text
}]
}], onSubmit: function(n)
{
var t=this.$modal.find('input[name="SRC"]').val(),
i,
r;
return t && (t = t.replace(/^\s+/, "").replace(/\s+$/, "")), i = t.indexOf("youtu.be") != -1 ? t.match(/^http[s]*:\/\/youtu\.be\/([a-z0-9_-]+)/i) : t.match(/^http[s]*:\/\/www\.youtube\.com\/watch\?.*?v=([a-z0-9_-]+)/i), i && i.length == 2 && (r = i[1], this.insertAtCursor(this.getCodeByCommand(n, {src: r}))), this.closeModal(), this.updateUI(), !1
}
}, transform: {'<iframe src="http://www.youtube.com/embed/{SRC}" width="640" height="480" frameborder="0"><\/iframe>': "[video]{SRC}[/video]"}
}, fs_verysmall: {
title: CURLANG.fs_verysmall, buttonText: "fs1", excmd: "fontSize", exvalue: "1", transform: {'<font size="1">{SELTEXT}<\/font>': "[size=50]{SELTEXT}[/size]"}
}, fs_small: {
title: CURLANG.fs_small, buttonText: "fs2", excmd: "fontSize", exvalue: "2", transform: {'<font size="2">{SELTEXT}<\/font>': "[size=85]{SELTEXT}[/size]"}
}, fs_normal: {
title: CURLANG.fs_normal, buttonText: "fs3", excmd: "fontSize", exvalue: "3", transform: {'<font size="3">{SELTEXT}<\/font>': "[size=100]{SELTEXT}[/size]"}
}, fs_big: {
title: CURLANG.fs_big, buttonText: "fs4", excmd: "fontSize", exvalue: "4", transform: {'<font size="4">{SELTEXT}<\/font>': "[size=150]{SELTEXT}[/size]"}
}, fs_verybig: {
title: CURLANG.fs_verybig, buttonText: "fs5", excmd: "fontSize", exvalue: "6", transform: {'<font size="6">{SELTEXT}<\/font>': "[size=200]{SELTEXT}[/size]"}
}, removeformat: {
title: CURLANG.removeFormat, buttonHTML: '<span class="fonticon ve-tlb-removeformat1"><\/span>', excmd: "removeFormat"
}
}, systr: {
"<br/>": "\n", '<span class="wbbtab">{SELTEXT}<\/span>': "   {SELTEXT}"
}, customRules: {
td: [["[td]{SELTEXT}[/td]", {seltext: {
rgx: !1, attr: !1, sel: !1
}}]], tr: [["[tr]{SELTEXT}[/tr]", {seltext: {
rgx: !1, attr: !1, sel: !1
}}]], table: [["[table]{SELTEXT}[/table]", {seltext: {
rgx: !1, attr: !1, sel: !1
}}]]
}, smileList: [], attrWrap: ["src", "color", "href"]
},
this.inited = this.options.onlyBBmode,
this.options.themePrefix || n("link").each(n.proxy(function(t, i)
{
var r=n(i).get(0).href.match(/(.*\/)(.*)\/wbbtheme\.css.*$/);
r !== null && (this.options.themeName = r[2], this.options.themePrefix = r[1])
}, this)),
typeof WBBPRESET != "undefined" && (WBBPRESET.allButtons && n.each(WBBPRESET.allButtons, n.proxy(function(n, t)
{
t.transform && this.options.allButtons[n] && delete this.options.allButtons[n].transform
}, this)), n.extend(!0, this.options, WBBPRESET)),
i && i.allButtons && n.each(i.allButtons, n.proxy(function(n, t)
{
t.transform && this.options.allButtons[n] && delete this.options.allButtons[n].transform
}, this)),
n.extend(!0, this.options, i),
this.init()
},
n.wysibb.prototype = {
lastid: 1, init: function()
{
n.log("Init", this),
this.isMobile = function(n)
{
/android|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|meego.+mobile|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(n)
}(navigator.userAgent || navigator.vendor || window.opera),
this.options.onlyBBmode === !0 && (this.options.bbmode = !0),
this.controllers = [],
this.options.buttons = this.options.buttons.toLowerCase(),
this.options.buttons = this.options.buttons.split(","),
this.options.allButtons._systr = {},
this.options.allButtons._systr.transform = this.options.systr,
this.smileFind(),
this.initTransforms(),
this.build(),
this.initModal(),
this.options.hotkeys !== !0 || this.isMobile || this.initHotkeys(),
this.options.smileList && this.options.smileList.length > 0 && this.options.smileList.sort(function(n, t)
{
return t.bbcode.length - n.bbcode.length
}),
this.$txtArea.parents("form").bind("submit", n.proxy(function()
{
return this.sync(), !0
}, this)),
this.$txtArea.parents("form").find("input[id*='preview'],input[id*='submit'],input[class*='preview'],input[class*='submit'],input[name*='preview'],input[name*='submit']").bind("mousedown", n.proxy(function()
{
this.sync(),
setTimeout(n.proxy(function()
{
this.options.bbmode === !1 && this.$txtArea.removeAttr("wbbsync").val("")
}, this), 1e3)
}, this)),
this.options.initCallback && this.options.initCallback.call(this),
n.log(this)
}, initTransforms: function()
{
var i,
f,
c,
t,
w,
y,
u,
l,
o,
e,
r,
s,
b,
a,
h,
p,
v;
for (n.log("Create rules for transform HTML=>BB"), i = this.options, i.rules || (i.rules = {}), i.groups || (i.groups = {}), f = i.buttons.slice(), f.push("_systr"), c = 0; c < f.length; c++)
if ((t = i.allButtons[f[c]], t) && (t.en = !0, t.simplebbcode && n.isArray(t.simplebbcode) && t.simplebbcode.length == 2 && (t.bbcode = t.html = t.simplebbcode[0] + "{SELTEXT}" + t.simplebbcode[1], t.transform && delete t.transform, t.modal && delete t.modal), t.type == "select" && typeof t.options == "string" && (w = t.options.split(","), n.each(w, function(t, i)
{
n.inArray(i, f) == -1 && f.push(i)
})), t.transform && t.skipRules !== !0))
{
y = n.extend({}, t.transform);
for (u in y)
l = u,
o = y[u],
t.bbSelector || (t.bbSelector = []),
n.inArray(o, t.bbSelector) == -1 && t.bbSelector.push(o),
this.options.onlyBBmode === !1 && (u = this.wrapAttrs(u), e = n(document.createElement("DIV")).append(n(this.elFromString(u, document))), r = this.filterByNode(e.children()), (r == "div" || typeof i.rules[r] != "undefined") && (n.log("create unique selector: " + r), this.setUID(e.children()), r = this.filterByNode(e.children()), n.log("New rootSelector: " + r), s = e.html(), s = this.unwrapAttrs(s), b = this.unwrapAttrs(u), t.transform[s] = o, delete t.transform[b], u = s, l = s), t.excmd || (t.rootSelector || (t.rootSelector = []), t.rootSelector.push(r)), typeof i.rules[r] == "undefined" && (i.rules[r] = []), a = {}, u.match(/\{\S+?\}/) && (e.find("*").each(n.proxy(function(t, i)
{
var f=this.getAttributeList(i),
u;
n.each(f, n.proxy(function(t, u)
{
var s=n(i).attr(u),
f,
e,
o,
h,
c;
if (u.substr(0, 1) == "_" && (u = u.substr(1)), f = s.match(/\{\S+?\}/g), f)
for (e = 0; e < f.length; e++)
o = f[e].substr(1, f[e].length - 2),
o = o.replace(this.getValidationRGX(o), ""),
h = this.relFilterByNode(i, r),
c = s != f[e] ? this.getRegexpReplace(s, f[e]) : !1,
a[o.toLowerCase()] = {
sel: h ? n.trim(h) : !1, attr: u, rgx: c
}
}, this)),
u = [],
n(i).is("iframe") || n(i).contents().filter(function()
{
return this.nodeType === 3
}).each(n.proxy(function(t, f)
{
var e=f.textContent || f.data,
s,
h,
o,
l,
v,
w;
if (typeof e == "undefined")
return !0;
if (s = e.match(/\{\S+?\}/g), s)
for (h = 0; h < s.length; h++)
{
o = s[h].substr(1, s[h].length - 2),
o = o.replace(this.getValidationRGX(o), "");
var y=this.relFilterByNode(i, r),
p=e != s[h] ? this.getRegexpReplace(e, s[h]) : !1,
c=y ? n.trim(y) : !1;
(n.inArray(c, u) > -1 || n(f).parent().contents().size() > 1) && (l = n("<span>").html("{" + o + "}"), this.setUID(l, "wbb"), v = e.indexOf(o) + o.length + 1, w = e.substr(v, e.length - v), f.data = e.substr(0, e.indexOf(o) - 1), n(f).after(this.elFromString(w, document)).after(l), c = (c ? c + " " : "") + this.filterByNode(l), p = !1),
a[o.toLowerCase()] = {
sel: c, attr: !1, rgx: p
},
u[u.length] = c
}
}, this)),
u = null
}, this)), h = e.html(), h = this.unwrapAttrs(h), l != h && (delete t.transform[l], t.transform[h] = o, u = h)), i.rules[r].push([o, a]), t.onlyClearText === !0 && (this.cleartext || (this.cleartext = {}), this.cleartext[r] = f[c]), t.groupkey && (i.groups[t.groupkey] || (i.groups[t.groupkey] = []), i.groups[t.groupkey].push(r)));
t.rootSelector && this.sortArray(t.rootSelector, -1),
p = n.map(t.transform, function(n, t)
{
return t
}).sort(function(n, t)
{
return (t[0] || "").length - (n[0] || "").length
}),
t.bbcode = t.transform[p[0]],
t.html = p[0]
}
this.options.btnlist = f,
n.extend(i.rules, this.options.customRules),
i.srules = {},
this.options.smileList && n.each(i.smileList, n.proxy(function(t, r)
{
var u=n(this.strf(r.img, i)),
f=this.filterByNode(u);
i.srules[f] = [r.bbcode, r.img]
}, this));
for (v in i.rules)
this.options.rules[v].sort(function(n, t)
{
return t[0].length - n[0].length
});
this.rsellist = [];
for (v in this.options.rules)
this.rsellist.push(v);
this.sortArray(this.rsellist, -1)
}, build: function()
{
if (n.log("Build editor"), this.$editor = n("<div>").addClass("wysibb"), this.isMobile && this.$editor.addClass("wysibb-mobile"), this.options.direction && this.$editor.css("direction", this.options.direction), this.$editor.insertAfter(this.txtArea).append(this.txtArea), this.startHeight = this.$txtArea.outerHeight(), this.$txtArea.addClass("wysibb-texarea"), this.buildToolbar(), this.$txtArea.wrap('<div class="wysibb-text">'), this.options.onlyBBmode === !1)
{
var t=this.options.minheight || this.$txtArea.outerHeight(),
u=this.options.resize_maxheight,
i=this.options.autoresize === !0 ? this.options.resize_maxheight : t,
r=this.$txtArea.outerWidth();
if (this.$body = n(this.strf('<div class="wysibb-text-editor" spellcheck="true" style="max-height:{maxheight}px;min-height:{height}px;width:{width}px"><\/div>', {
maxheight: i, height: t, width: r
})).insertAfter(this.$txtArea), this.body = this.$body[0], this.$txtArea.hide(), t > 32 && this.$toolbar.css("max-height", t), n.log("WysiBB loaded"), this.$body.addClass("wysibb-body").addClass(this.options.bodyClass), this.options.direction && this.$body.css("direction", this.options.direction), "contentEditable" in this.body)
{
this.body.contentEditable = !0;
try
{
document.execCommand("StyleWithCSS", !1, !1),
this.$body.append("<span><\/span>")
}
catch(f) {}
}
else
this.options.onlyBBmode = this.options.bbmode = !0;
this.txtArea.value.length > 0 && this.txtAreaInitContent(),
this.$body.bind("keydown", n.proxy(function(t)
{
if (t.which == 86 && (t.ctrlKey == !0 || t.metaKey == !0) || t.which == 45 && (t.shiftKey == !0 || t.metaKey == !0))
return this.$pasteBlock || (this.saveRange(), this.$pasteBlock = n(this.elFromString('<div style="opacity:0;" contenteditable="true">﻿<\/div>')), this.$pasteBlock.appendTo(this.body), setTimeout(n.proxy(function()
{
this.clearPaste(this.$pasteBlock);
var t="<span>" + this.$pasteBlock.html() + "<\/span>";
this.$body.attr("contentEditable", "true"),
this.$pasteBlock.blur().remove(),
this.body.focus(),
this.cleartext && (n.log("Check if paste to clearText Block"), this.isInClearTextBlock() && (t = this.toBB(t).replace(/\n/g, "<br/>").replace(/\s{3}/g, '<span class="wbbtab"><\/span>'))),
t = t.replace(/\t/g, '<span class="wbbtab"><\/span>'),
this.selectRange(this.lastRange),
this.insertAtCursor(t, !1),
this.lastRange = !1,
this.$pasteBlock = !1
}, this), 1), this.selectNode(this.$pasteBlock[0])), !0
}, this)),
this.$body.bind("keydown", n.proxy(function(n)
{
if (n.which == 13)
{
var t=this.isContain(this.getSelectNode(), "li");
t || (n.preventDefault && n.preventDefault(), this.checkForLastBR(this.getSelectNode()), this.insertAtCursor("<br/>", !1))
}
}, this)),
this.options.tabInsert === !0 && this.$body.bind("keydown", n.proxy(this.pressTab, this)),
this.$body.bind("mouseup keyup", n.proxy(this.updateUI, this)),
this.$body.bind("mousedown", n.proxy(function(n)
{
this.clearLastRange(),
this.checkForLastBR(n.target)
}, this)),
this.options.traceTextarea === !0 && (n(document).bind("mousedown", n.proxy(this.traceTextareaEvent, this)), this.$txtArea.val("")),
this.options.hotkeys === !0 && this.$body.bind("keydown", n.proxy(this.presskey, this)),
this.options.smileConversion === !0 && this.$body.bind("keyup", n.proxy(this.smileConversion, this)),
this.inited = !0,
this.options.autoresize === !0 && (this.$bresize = n(this.elFromString('<div class="bottom-resize-line"><\/div>')).appendTo(this.$editor).wdrag({
scope: this, axisY: !0, height: t
})),
this.imgListeners(),
this.$body.bind("focus mousedown", n.proxy(function()
{
this.clearDefaultPrompt(),
this.$txtArea.trigger("ngexpand")
}, this))
}
else
this.$body = n("<div/>"),
this.body = this.$body[0];
this.$txtArea.bind("mouseup keyup", n.proxy(function()
{
clearTimeout(this.uitimer),
this.uitimer = setTimeout(n.proxy(this.updateUI, this), 100)
}, this)),
this.$txtArea.bind("ngresize", n.proxy(function()
{
var n=this.$txtArea.outerWidth();
this.$body.css({width: n + "px"})
}, this)),
this.options.hotkeys === !0 && n(document).bind("keydown", n.proxy(this.presskey, this))
}, buildToolbar: function()
{
var t,
i;
if (this.options.toolbar === !1)
return !1;
this.$toolbar = n("<div>").addClass("wysibb-toolbar").prependTo(this.$editor),
n.each(this.options.buttons, n.proxy(function(i, r)
{
var u=this.options.allButtons[r];
(i == 0 || r == "|" || r == "-") && (r == "-" && this.$toolbar.append("<div>"), t = n('<div class="wysibb-toolbar-container">').appendTo(this.$toolbar)),
u && (u.type == "colorpicker" ? this.buildColorpicker(t, r, u) : u.type == "table" ? this.buildTablepicker(t, r, u) : u.type == "select" ? this.buildSelect(t, r, u) : u.type == "smilebox" ? this.buildSmilebox(t, r, u) : this.buildButton(t, r, u))
}, this)),
this.$toolbar.find(".btn-tooltip").hover(function()
{
n(this).parent().css("overflow", "hidden")
}, function()
{
n(this).parent().css("overflow", "visible")
}),
this.options.enableModeSwitch && (i = n(document.createElement("div")).addClass("wysibb-toolbar-container modeSwitch").html('<div class="wysibb-toolbar-btn mswitch" unselectable="on"><span class="btn-inner modesw" unselectable="on">[bbcode]<\/span><\/div>').appendTo(this.$toolbar), this.options.bbmode == !0 && i.children(".wysibb-toolbar-btn").addClass("on"), this.options.onlyBBmode === !1 && i.children(".wysibb-toolbar-btn").click(n.proxy(function(t)
{
n(t.currentTarget).toggleClass("on"),
this.modeSwitch()
}, this)))
}, buildButton: function(t, i, r)
{
typeof t != "object" && (t = this.$toolbar);
var f=r.buttonHTML ? n(this.strf(r.buttonHTML, this.options)).addClass("btn-inner") : this.strf('<span class="btn-inner btn-text">{text}<\/span>', {text: r.buttonText.replace(/</g, "&lt;")}),
e=this.options.hotkeys === !0 && this.options.showHotkeys === !0 && r.hotkey ? ' <span class="tthotkey">[' + r.hotkey + "]<\/span>" : "",
u=n('<div class="wysibb-toolbar-btn wbb-' + i + '">').appendTo(t).append(f).append(this.strf('<span class="btn-tooltip">{title}<ins/>{hotkey}<\/span>', {
title: r.title, hotkey: e
}));
this.controllers.push(u),
u.bind("queryState", n.proxy(function(t)
{
this.queryState(i) ? n(t.currentTarget).addClass("on") : n(t.currentTarget).removeClass("on")
}, this)),
u.mousedown(n.proxy(function(t)
{
t.preventDefault(),
this.execCommand(i, r.exvalue || !1),
n(t.currentTarget).trigger("queryState")
}, this))
}, buildColorpicker: function(t, i, r)
{
var u=n('<div class="wysibb-toolbar-btn wbb-dropdown wbb-cp">').appendTo(t).append('<div class="ve-tlb-colorpick"><span class="fonticon"><\/span><span class="cp-line"><\/span><\/div><ins class="fonticon ar"><\/ins>').append(this.strf('<span class="btn-tooltip">{title}<ins/><\/span>', {title: r.title})),
h=u.find(".cp-line"),
o=n('<div class="wbb-list">').appendTo(u),
e,
f,
s;
for (o.append('<div class="nc">' + CURLANG.auto + "<\/div>"), e = r.colors ? r.colors.split(",") : [], f = 0; f < e.length; f++)
e[f] = n.trim(e[f]),
e[f] == "-" ? o.append('<span class="pl"><\/span>') : o.append(this.strf('<div class="sc" style="background:{color}" title="{color}"><\/div>', {color: e[f]}));
s = n(document.body).css("color"),
this.controllers.push(u),
u.bind("queryState", n.proxy(function()
{
h.css("background-color", s);
var n=this.queryState(i, !0);
n && (h.css("background-color", this.options.bbmode ? n.color : n), u.find(".ve-tlb-colorpick span.fonticon").css("color", this.options.bbmode ? n.color : n))
}, this)),
u.mousedown(n.proxy(function(n)
{
n.preventDefault(),
this.dropdownclick(".wbb-cp", ".wbb-list", n)
}, this)),
u.find(".sc").mousedown(n.proxy(function(t)
{
t.preventDefault(),
this.selectLastRange();
var r=n(t.currentTarget).attr("title");
this.execCommand(i, r),
u.trigger("queryState")
}, this)),
u.find(".nc").mousedown(n.proxy(function(n)
{
n.preventDefault(),
this.selectLastRange(),
this.execCommand(i, s),
u.trigger("queryState")
}, this)),
u.mousedown(function(n)
{
n.preventDefault && n.preventDefault()
})
}, buildTablepicker: function(t, i, r)
{
var o=n('<div class="wysibb-toolbar-btn wbb-dropdown wbb-tbl">').appendTo(t).append('<span class="btn-inner fonticon ve-tlb-table1"><\/span><ins class="fonticon ar"><\/ins>').append(this.strf('<span class="btn-tooltip">{title}<ins/><\/span>', {title: r.title})),
l=n('<div class="wbb-list">').appendTo(o),
h=n("<div>").css({
position: "relative", "box-sizing": "border-box"
}).appendTo(l),
e=r.rows || 10,
s=r.cols || 10,
a=e * s,
u,
f,
c;
for (h.css("height", e * r.cellwidth + 2 + "px"), u = 1; u <= s; u++)
for (f = 1; f <= e; f++)
c = '<div class="tbl-sel" style="width:' + u * 100 / s + "%;height:" + f * 100 / e + "%;z-index:" + --a + '" title="' + f + "," + u + '"><\/div>',
h.append(c);
o.find(".tbl-sel").mousedown(n.proxy(function(t)
{
var r,
u;
t.preventDefault();
var e=n(t.currentTarget).attr("title"),
f=e.split(","),
i=this.options.bbmode ? "[table]" : '<table class="wbb-table" cellspacing="5" cellpadding="0">';
for (r = 1; r <= f[0]; r++)
{
for (i += this.options.bbmode ? " [tr]\n" : "<tr>", u = 1; u <= f[1]; u++)
i += this.options.bbmode ? "  [td][/td]\n" : "<td>﻿<\/td>";
i += this.options.bbmode ? "[/tr]\n" : "<\/tr>"
}
i += this.options.bbmode ? "[/table]" : "<\/table>",
this.insertAtCursor(i)
}, this)),
o.mousedown(n.proxy(function(n)
{
n.preventDefault(),
this.dropdownclick(".wbb-tbl", ".wbb-list", n)
}, this))
}, buildSelect: function(t, i, r)
{
for (var e=n('<div class="wysibb-toolbar-btn wbb-select wbb-' + i + '">').appendTo(t).append(this.strf('<span class="val">{title}<\/span><ins class="fonticon sar"><\/ins>', r)).append(this.strf('<span class="btn-tooltip">{title}<ins/><\/span>', {title: r.title})), h=n('<div class="wbb-list">').appendTo(e), l=e.find("span.val"), a=n.isArray(r.options) ? r.options : r.options.split(","), o=this.isMobile ? n("<select>").addClass("wbb-selectbox") : "", u, f, c, s=0; s < a.length; s++)
u = a[s],
typeof u == "string" ? (f = this.options.allButtons[u], f && (f.html ? n("<span>").addClass("option").attr("oid", u).attr("cmdvalue", f.exvalue).appendTo(h).append(this.strf(f.html, {seltext: f.title})) : h.append(this.strf('<span class="option" oid="' + u + '" cmdvalue="' + f.exvalue + '">{title}<\/span>', f)), this.isMobile && o.append(n("<option>").attr("oid", u).attr("cmdvalue", f.exvalue).append(f.title)))) : (c = {seltext: u.title}, c[r.valueBBname] = u.exvalue, n("<span>").addClass("option").attr("oid", i).attr("cmdvalue", u.exvalue).appendTo(h).append(this.strf(r.html, c)), this.isMobile && o.append(n("<option>").attr("oid", i).attr("cmdvalue", u.exvalue).append(u.exvalue)));
this.isMobile && (o.appendTo(t), this.controllers.push(o), o.bind("queryState", n.proxy(function()
{
o.find("option").each(n.proxy(function(t, i)
{
var r=n(i),
u=this.queryState(r.attr("oid"), !0),
f=r.attr("cmdvalue");
if (f && u == r.attr("cmdvalue") || !f && u)
return r.prop("selected", !0), !1
}, this))
}, this)), o.change(n.proxy(function(t)
{
t.preventDefault();
var i=n(t.currentTarget).find(":selected"),
r=i.attr("oid"),
u=i.attr("cmdvalue"),
f=this.options.allButtons[r];
this.execCommand(r, f.exvalue || u || !1),
n(t.currentTarget).trigger("queryState")
}, this))),
this.controllers.push(e),
e.bind("queryState", n.proxy(function()
{
l.text(r.title),
e.find(".option.selected").removeClass("selected"),
e.find(".option").each(n.proxy(function(t, i)
{
var r=n(i),
u=this.queryState(r.attr("oid"), !0),
f=r.attr("cmdvalue");
if (f && u == r.attr("cmdvalue") || !f && u)
return l.text(r.text()), r.addClass("selected"), !1
}, this))
}, this)),
e.mousedown(n.proxy(function(n)
{
n.preventDefault(),
this.dropdownclick(".wbb-select", ".wbb-list", n)
}, this)),
e.find(".option").mousedown(n.proxy(function(t)
{
t.preventDefault();
var i=n(t.currentTarget).attr("oid"),
r=n(t.currentTarget).attr("cmdvalue"),
u=this.options.allButtons[i];
this.execCommand(i, u.exvalue || r || !1),
n(t.currentTarget).trigger("queryState")
}, this))
}, buildSmilebox: function(t, i, r)
{
if (this.options.smileList && this.options.smileList.length > 0)
{
var f=n(this.strf(r.buttonHTML, r)).addClass("btn-inner"),
u=n('<div class="wysibb-toolbar-btn wbb-smilebox wbb-' + i + '">').appendTo(t).append(f).append(this.strf('<span class="btn-tooltip">{title}<ins/><\/span>', {title: r.title})),
e=n('<div class="wbb-list">').appendTo(u);
n.isArray(this.options.smileList) && n.each(this.options.smileList, n.proxy(function(t, i)
{
n("<span>").addClass("smile").appendTo(e).append(n(this.strf(i.img, this.options)).attr("title", i.title))
}, this)),
u.mousedown(n.proxy(function(n)
{
n.preventDefault(),
this.dropdownclick(".wbb-smilebox", ".wbb-list", n)
}, this)),
u.find(".smile").mousedown(n.proxy(function(t)
{
t.preventDefault(),
this.insertAtCursor(this.options.bbmode ? this.toBB(n(t.currentTarget).html()) : n(n(t.currentTarget).html()))
}, this))
}
}, updateUI: function(t)
{
(!t || t.which >= 8 && t.which <= 46 || t.which > 90 || t.type == "mouseup") && n.each(this.controllers, n.proxy(function(n, t)
{
t.trigger("queryState")
}, this)),
this.disNonActiveButtons()
}, initModal: function()
{
if (this.$modal = n("#wbbmodal"), this.$modal.size() == 0)
{
n.log("Init modal"),
this.$modal = n("<div>").attr("id", "wbbmodal").prependTo(document.body).html('<div class="wbbm"><div class="wbbm-title"><span class="wbbm-title-text"><\/span><span class="wbbclose" title="' + CURLANG.close + '">×<\/span><\/div><div class="wbbm-content"><\/div><div class="wbbm-bottom"><button id="wbbm-submit" class="wbb-button">' + CURLANG.save + '<\/button><button id="wbbm-cancel" class="wbb-cancel-button">' + CURLANG.cancel + '<\/button><button id="wbbm-remove" class="wbb-remove-button">' + CURLANG.remove + "<\/button><\/div><\/div>").hide();
this.$modal.on("click", function(n)
{
n.stopPropagation()
});
this.$modal.find("#wbbm-cancel,.wbbclose").click(n.proxy(this.closeModal, this)),
this.$modal.bind("click", n.proxy(function(t)
{
n(t.target).parents(".wbbm").size() == 0 && this.closeModal()
}, this)),
n(document).bind("keydown", n.proxy(this.escModal, this))
}
}, initHotkeys: function()
{
n.log("initHotkeys"),
this.hotkeys = [];
var t="0123456789       abcdefghijklmnopqrstuvwxyz";
n.each(this.options.allButtons, n.proxy(function(i, r)
{
var f,
u,
e;
r.hotkey && (f = r.hotkey.split("+"), f && f.length >= 2 && (u = 0, e = f.pop(), n.each(f, function(t, i)
{
switch (n.trim(i.toLowerCase()))
{
case"ctrl":
u += 1;
break;
case"shift":
u += 4;
break;
case"alt":
u += 7
}
}), u > 0 && (this.hotkeys["m" + u] || (this.hotkeys["m" + u] = []), this.hotkeys["m" + u]["k" + (t.indexOf(e) + 48)] = i)))
}, this))
}, presskey: function(n)
{
if (n.ctrlKey == !0 || n.shiftKey == !0 || n.altKey == !0)
{
var t=(n.ctrlKey == !0 ? 1 : 0) + (n.shiftKey == !0 ? 4 : 0) + (n.altKey == !0 ? 7 : 0);
if (this.hotkeys["m" + t] && this.hotkeys["m" + t]["k" + n.which])
return this.execCommand(this.hotkeys["m" + t]["k" + n.which], !1), n.preventDefault(), !1
}
}, execCommand: function(t, i)
{
var r,
u,
f,
e;
if (n.log("execCommand: " + t), r = this.options.allButtons[t], r.en !== !0)
return !1;
(u = this.queryState(t, i), f = this.isInClearTextBlock(), f && f != t) || (r.excmd ? this.options.bbmode ? (n.log("Native command in bbmode: " + t), u && r.subInsert != !0 ? this.wbbRemoveCallback(t, i) : (e = {}, r.valueBBname && i && (e[r.valueBBname] = i), this.insertAtCursor(this.getBBCodeByCommand(t, e)))) : this.execNativeCommand(r.excmd, i || !1) : r.cmd ? r.cmd.call(this, t, i, u) : this.wbbExecCommand.call(this, t, i, u), this.updateUI())
}, queryState: function(t, i)
{
var r=this.options.allButtons[t],
f,
e,
u,
o;
if (r.en !== !0)
return !1;
if (this.options.bbmode)
{
if (r.bbSelector)
for (u = 0; u < r.bbSelector.length; u++)
if (f = this.isBBContain(r.bbSelector[u]), f)
return this.getParams(f, r.bbSelector[u], f[1]);
return !1
}
if (r.excmd)
if (i)
try
{
return e = (document.queryCommandValue(r.excmd) + "").replace(/\'/g, ""), r.excmd == "foreColor" && (e = this.rgbToHex(e)), e
}
catch(s)
{
return !1
}
else
try
{
return (r.excmd == "bold" || r.excmd == "italic" || r.excmd == "underline" || r.excmd == "strikeThrough") && n(this.getSelectNode()).is("img") ? !1 : r.excmd == "underline" && n(this.getSelectNode()).closest("a").size() > 0 ? !1 : document.queryCommandState(r.excmd)
}
catch(s)
{
return !1
}
else
{
if (n.isArray(r.rootSelector))
for (u = 0; u < r.rootSelector.length; u++)
if (o = this.isContain(this.getSelectNode(), r.rootSelector[u]), o)
return this.getParams(o, r.rootSelector[u]);
return !1
}
}, wbbExecCommand: function(t, i, r)
{
var u,
f,
e;
n.log("wbbExecCommand"),
u = this.options.allButtons[t],
u && (u.modal ? n.isFunction(u.modal) ? u.modal.call(this, t, u.modal, r) : this.showModal.call(this, t, u.modal, r) : r && u.subInsert != !0 ? this.wbbRemoveCallback(t) : (u.groupkey && (f = this.options.groups[u.groupkey], f && (e = this.getSelectNode(), n.each(f, n.proxy(function(t, i)
{
var r=this.isContain(e, i),
u,
f;
if (r)
return u = n("<span>").html(r.innerHTML), f = this.setUID(u), n(r).replaceWith(u), this.selectNode(this.$editor.find("#" + f)[0]), !1
}, this)))), this.wbbInsertCallback(t, i)))
}, wbbInsertCallback: function(t, i)
{
var r,
u;
typeof i != "object" && (i = {}),
n.log("wbbInsertCallback: " + t),
r = this.getCodeByCommand(t, i),
this.insertAtCursor(r),
this.seltextID && r.indexOf(this.seltextID) != -1 && (u = this.$body.find("#" + this.seltextID)[0], this.selectNode(u), n(u).removeAttr("id"), this.seltextID = !1)
}, wbbRemoveCallback: function(t, i)
{
var r,
e,
u,
f;
n.log("wbbRemoveCallback: " + t),
r = this.options.allButtons[t],
this.options.bbmode ? (e = this.getCursorPosBB(), u = 0, n.each(r.bbSelector, n.proxy(function(t, r)
{
var e=r.match(/\{[\s\S]+?\}/g),
f;
return n.each(e, function(n, t)
{
if (t.toLowerCase() == "{seltext}")
return u = n, !1
}), f = this.isBBContain(r), f ? (this.txtArea.value = this.txtArea.value.substr(0, f[1]) + this.txtArea.value.substr(f[1], this.txtArea.value.length - f[1]).replace(f[0][0], i === !0 ? "" : f[0][u + 1]), this.setCursorPosBB(f[1]), !1) : void 0
}, this))) : (f = this.getSelectNode(), n.each(r.rootSelector, n.proxy(function(u, e)
{
var c=this.isContain(f, e),
o,
h,
s,
p,
w,
b,
d;
if (!c)
return !0;
if (o = n(c), h = this.options.rules[e][0][1], o.is("span[wbb]") || !o.is("span,font"))
return i !== !0 && h && h.seltext ? h && h.seltext && h.seltext.sel ? (s = o.find(h.seltext.sel).html(), r.onlyClearText === !0 && (s = this.getHTML(s, !0, !0), s = s.replace(/\&#123;/g, "{").replace(/\&#125;/g, "}")), o.replaceWith(s)) : (s = o.html(), r.onlyClearText === !0 && (s = this.getHTML(s, !0), s = s.replace(/\&lt;/g, "<").replace(/\&gt;/g, ">").replace(/\&#123;/g, "{").replace(/\&#125;/g, "}")), o.replaceWith(s)) : (this.setCursorByEl(o), o.remove()), !1;
var v=this.getRange(),
y=this.getSelectText(),
g=this.getSelectNode();
y = y == "" ? "﻿" : this.clearFromSubInsert(y, t);
var k=this.elFromString(y),
l=window.getSelection ? v.cloneRange() : this.body.createTextRange(),
a=window.getSelection ? v.cloneRange() : this.body.createTextRange();
return window.getSelection ? (this.insertAtCursor('<span id="wbbdivide"><\/span>'), p = o.find("span#wbbdivide").get(0), l.setStart(c.firstChild, 0), l.setEndBefore(p), a.setStartAfter(p), a.setEndAfter(c.lastChild)) : (l.moveToElementText(c), a.moveToElementText(c), l.setEndPoint("EndToStart", v), a.setEndPoint("StartToEnd", v)), w = this.getSelectText(!1, l), b = this.getSelectText(!1, a), b != "" && (d = o.clone().html(b), o.after(d)), i !== !0 && o.after(k), window.getSelection ? (o.html(w), i !== !0 && this.selectNode(k)) : o.replaceWith(w), !1
}, this)))
}, execNativeCommand: function(t, i)
{
var r,
f,
e;
if (this.body.focus(), t != "insertHTML" || window.getSelection)
if (t == "insertHTML")
{
var o=this.getSelection(),
s=this.elFromString(i),
u=this.lastRange ? this.lastRange : this.getRange();
u.deleteContents(),
u.insertNode(s),
u.collapse(!1),
o.removeAllRanges(),
o.addRange(u)
}
else
typeof i == "undefined" && (i = !1),
this.lastRange && (n.log("Last range select"), this.selectLastRange()),
document.execCommand(t, !1, i);
else
r = this.lastRange ? this.lastRange : document.selection.createRange(),
r.pasteHTML(i),
f = n("<div>").html(i).text(),
e = f.indexOf("﻿"),
e > -1 && (r.moveStart("character", -1 * (f.length - e)), r.select()),
this.lastRange = !1
}, getCodeByCommand: function(n, t)
{
return this.options.bbmode ? this.getBBCodeByCommand(n, t) : this.getHTMLByCommand(n, t)
}, getBBCodeByCommand: function(t, i)
{
var u,
f,
e,
r;
return this.options.allButtons[t] ? (typeof i == "undefined" && (i = {}), i = this.keysToLower(i), i.seltext || (i.seltext = this.getSelectText(!0)), u = this.options.allButtons[t].bbcode, u = u.replace(/\{(.*?)(\[.*?\])*\}/g, function(n, t, r)
{
if (r)
{
var u;
if (r && (u = new RegExp(r + "+", "i")), typeof i[t.toLowerCase()] != "undefined" && i[t.toLowerCase()].toString().match(u) === null)
return ""
}
return typeof i[t.toLowerCase()] == "undefined" ? "" : i[t.toLowerCase()]
}), f = null, e = 0, this.options.allButtons[t].transform && (r = [], n.each(this.options.allButtons[t].transform, function(n, t)
{
r.push(t)
}), r = this.sortArray(r, -1), n.each(r, function(n, t)
{
var u=!0,
r=0,
o={};
t = t.replace(/\{(.*?)(\[.*?\])*\}/g, function(n, t, f)
{
var e;
return t = t.toLowerCase(), f && (e = new RegExp(f + "+", "i")), (typeof i[t.toLowerCase()] == "undefined" || f && i[t.toLowerCase()].toString().match(e) === null) && (u = !1), typeof i[t] == "undefined" || o[t] || (o[t] = 1, r++), typeof i[t.toLowerCase()] == "undefined" ? "" : i[t.toLowerCase()]
}),
u && r > e && (f = t, e = r)
})), f || u) : ""
}, getHTMLByCommand: function(t, i)
{
var f,
u,
e,
o,
r;
return this.options.allButtons[t] ? (i = this.keysToLower(i), typeof i == "undefined" && (i = {}), i.seltext || (i.seltext = this.getSelectText(!1), i.seltext == "" ? i.seltext = "﻿" : (i.seltext = this.clearFromSubInsert(i.seltext, t), this.options.allButtons[t].onlyClearText === !0 && (i.seltext = this.toBB(i.seltext).replace(/\</g, "&lt;").replace(/\n/g, "<br/>").replace(/\s{3}/g, '<span class="wbbtab"><\/span>')))), f = "", this.seltextID = "wbbid_" + ++this.lastid, t != "link" && t != "img" ? i.seltext = '<span id="' + this.seltextID + '">' + i.seltext + "<\/span>" : f = '<span id="' + this.seltextID + '">﻿<\/span>', u = this.options.allButtons[t].html, u = u.replace(/\{(.*?)(\[.*?\])*\}/g, function(n, t, r)
{
if (r)
{
var u=new RegExp(r + "+", "i");
if (typeof i[t.toLowerCase()] != "undefined" && i[t.toLowerCase()].toString().match(u) === null)
return ""
}
return typeof i[t.toLowerCase()] == "undefined" ? "" : i[t.toLowerCase()]
}), e = null, o = 0, this.options.allButtons[t].transform && (r = [], n.each(this.options.allButtons[t].transform, function(n)
{
r.push(n)
}), r = this.sortArray(r, -1), n.each(r, function(n, t)
{
var u=!0,
r=0,
f={};
t = t.replace(/\{(.*?)(\[.*?\])*\}/g, function(n, t, e)
{
var o;
return t = t.toLowerCase(), e && (o = new RegExp(e + "+", "i")), (typeof i[t] == "undefined" || e && i[t].toString().match(o) === null) && (u = !1), typeof i[t] == "undefined" || f[t] || (f[t] = 1, r++), typeof i[t] == "undefined" ? "" : i[t]
}),
u && r > o && (e = t, o = r)
})), (e || u) + f) : ""
}, getSelection: function()
{
return document.selection ? this.options.bbmode ? document.selection.createRange() : document.selection.createRange() : window.getSelection ? window.getSelection() : void 0
}, getSelectText: function(t, i)
{
var r,
u;
if (t)
return this.txtArea.focus(), "selectionStart" in this.txtArea ? (r = this.txtArea.selectionEnd - this.txtArea.selectionStart, this.txtArea.value.substr(this.txtArea.selectionStart, r)) : (u = document.selection.createRange(), u.text);
if (this.body.focus(), i || (i = this.getRange()), window.getSelection)
{
if (i)
return n("<div>").append(i.cloneContents()).html()
}
else
return i.htmlText;
return ""
}, getRange: function()
{
var n,
t;
if (window.getSelection)
{
if (n = this.getSelection(), n.getRangeAt && n.rangeCount > 0)
return n.getRangeAt(0);
if (n.anchorNode)
return t = this.options.bbmode ? document.createRange() : document.createRange(), t.setStart(n.anchorNode, n.anchorOffset), t.setEnd(n.focusNode, n.focusOffset), t
}
else
return this.options.bbmode === !0 ? document.selection.createRange() : document.selection.createRange()
}, insertAtCursor: function(t, i)
{
var u,
r,
f,
e;
typeof t != "string" && (t = n("<div>").append(t).html()),
this.options.bbmode && typeof i == "undefined" || i === !0 ? (u = t.replace(/.*(\[\/\S+?\])$/, "$1"), r = this.getCursorPosBB() + (t.indexOf(u) != -1 && t.match(/\[.*\]/) ? t.indexOf(u) : t.length), document.selection ? (this.txtArea.focus(), this.clearDefaultPrompt(), f = n(this.txtArea).prop("spellcheck"), f && n(this.txtArea).prop("spellcheck", !1), this.getSelection().text = t, f && n(this.txtArea).prop("spellcheck", !0)) : (this.txtArea.selectionStart || this.txtArea.selectionStart == "0") && (this.txtArea.value = this.txtArea.value.substring(0, this.txtArea.selectionStart) + t + this.txtArea.value.substring(this.txtArea.selectionEnd, this.txtArea.value.length)), r < 0 && (r = 0), this.setCursorPosBB(r)) : (this.execNativeCommand("insertHTML", t), e = this.getSelectNode(), n(e).closest("table,tr,td") || this.splitPrevNext(e))
}, getSelectNode: function(t)
{
if (this.body.focus(), t || (t = this.getRange()), !t)
return this.$body;
var i=window.getSelection ? t.commonAncestorContainer : t.parentElement();
return n(i).is(".imgWrap") && (i = n(i).children("img")[0]), i
}, getCursorPosBB: function()
{
var n=0,
i;
if ("selectionStart" in this.txtArea)
n = this.txtArea.selectionStart;
else
{
this.txtArea.focus();
var f=document.selection.createRange(),
r=this.txtArea.value.replace(/\r\n/g, "\n"),
u=r.length,
t=this.txtArea.createTextRange();
t.moveToBookmark(f.getBookmark()),
i = this.txtArea.createTextRange(),
i.collapse(!1),
n = t.compareEndPoints("StartToEnd", i) > -1 ? u : -t.moveStart("character", -u) + (r.slice(0, n).split("\r\n").length - 1)
}
return n
}, setCursorPosBB: function(n)
{
var t,
i;
this.options.bbmode && (window.getSelection ? (this.txtArea.selectionStart = n, this.txtArea.selectionEnd = n) : (t = this.txtArea.createTextRange(), t.collapse(!0), t.move("character", n), i = this.txtArea, setTimeout(function()
{
i.focus(),
t.select()
}, 50)))
}, selectNode: function(n, t)
{
if (t || (t = this.getRange()), t)
if (window.getSelection)
{
var i=this.getSelection();
t.selectNodeContents(n),
i.removeAllRanges(),
i.addRange(t)
}
else
t.moveToElementText(n),
t.select()
}, selectRange: function(n)
{
if (n)
if (window.getSelection)
{
var t=this.getSelection();
t.removeAllRanges(),
t.addRange(n)
}
else
n.select()
}, cloneRange: function(n)
{
if (n)
return window.getSelection ? n.cloneRange() : n.duplicate()
}, getRangeClone: function()
{
return this.cloneRange(this.getRange())
}, saveRange: function()
{
this.setBodyFocus(),
this.lastRange = this.getRangeClone()
}, selectLastRange: function()
{
this.lastRange && (this.body.focus(), this.selectRange(this.lastRange), this.lastRange = !1)
}, setBodyFocus: function()
{
n.log("Set focus to WysiBB editor"),
this.options.bbmode ? this.$txtArea.is(":focus") || this.$txtArea.focus() : this.$body.is(":focus") || this.$body.focus()
}, clearLastRange: function()
{
this.lastRange = !1
}, filterByNode: function(t)
{
var i=n(t),
f=i.get(0).tagName.toLowerCase(),
r=f,
e=this.getAttributeList(i.get(0)),
u;
return n.each(e, n.proxy(function(t, u)
{
var f=i.attr(u),
o,
e;
u.substr(0, 1) == "_" && (u = u.substr(1, u.length)),
f && !f.match(/\{.*?\}/) ? u == "style" ? (f = i.attr(u), e = f.split(";"), n.each(e, function(t, i)
{
i && i.length > 0 && (r += "[" + u + '*="' + n.trim(i) + '"]')
})) : r += "[" + u + '="' + f + '"]' : f && u == "style" ? (o = f.substr(0, f.indexOf("{")), o && o != "" && (f = f.substr(0, f.indexOf("{")), e = f.split(";"), n.each(e, function(n, t)
{
r += "[" + u + '*="' + t + '"]'
}))) : r += "[" + u + "]"
}, this)), u = i.parent().children(r).index(i), u > 0 && (r += ":eq(" + i.index() + ")"), r
}, relFilterByNode: function(t, i)
{
var r="";
for (n.each(this.options.attrWrap, function(n, t)
{
i = i.replace("[" + t, "[_" + t)
}); t && t.tagName != "BODY" && !n(t).is(i); )
r = this.filterByNode(t) + " " + r,
t && (t = t.parentNode);
return r
}, getRegexpReplace: function(n, t)
{
return n.replace(/(\(|\)|\[|\]|\.|\*|\?|\:|\\)/g, "\\$1").replace(/\s+/g, "\\s+").replace(t.replace(/(\(|\)|\[|\]|\.|\*|\?|\:|\\)/g, "\\$1"), "(.+)").replace(/\{\S+?\}/g, ".*")
}, getBBCode: function()
{
return this.options.rules ? this.options.bbmode ? this.$txtArea.val() : (this.clearEmpty(), this.removeLastBodyBR(), this.toBB(this.$body.html())) : this.$txtArea.val()
}, toBB: function(t)
{
var i,
r;
return t ? (i = typeof t == "string" ? n("<span>").html(t) : n(t), i.find("div,blockquote,p").each(function()
{
this.nodeType != 3 && this.lastChild && this.lastChild.tagName == "BR" && n(this.lastChild).remove()
}), i.is("div,blockquote,p") && i[0].nodeType != 3 && i[0].lastChild && i[0].lastChild.tagName == "BR" && n(i[0].lastChild).remove(), i.find("ul > br, table > br, tr > br").remove(), r = "", n.each(this.options.srules, n.proxy(function(n, t)
{
i.find(n).replaceWith(t[0])
}, this)), i.contents().each(n.proxy(function(t, i)
{
var u=n(i),
l,
o,
c,
s,
t;
if (i.nodeType === 3)
r += i.data.replace(/\t/g, "   ");
else
{
for (l = !1, o = 0; o < this.rsellist.length; o++)
if (c = this.rsellist[o], u && u.is(c))
for (s = this.options.rules[c], t = 0; t < s.length; t++)
{
var f=s[t][0],
a=s[t][1],
e=!1,
h=!1,
v=!1;
if (u.is("br") || (f = f.replace(/\n/g, "<br>")), f = f.replace(/\{(.*?)(\[.*?\])*\}/g, n.proxy(function(t, r)
{
var f=a[r.toLowerCase()],
s,
o,
c,
l,
y,
p,
w;
return (typeof f == "undefined" && (n.log("Param: {" + r + "} not found in HTML representation."), e = !0), s = f.sel ? n(i).find(f.sel) : n(i), f.attr && !s.attr(f.attr)) ? (e = !0, r) : (o = f.attr ? s.attr(f.attr) : s.html(), typeof o == "undefined" || o == null) ? (e = !0, r) : (c = f.rgx, c && f.attr == "style" && c.substr(c.length - 1, 1) != ";" && (c += ";"), f.attr == "style" && o && o.substr(o.length - 1, 1) != ";" && (o += ";"), l = c ? new RegExp(c, "") : !1, l && (o.match(l) ? (y = o.match(l), y && y.length == 2 && (o = y[1])) : o = ""), f.attr && e === !1 && (f.attr == "style" ? (h = !0, p = "", w = f.rgx.replace(/^\.\*\?/, "").replace(/\.\*$/, "").replace(/;$/, ""), n(s.attr("style").split(";")).each(function(n, t)
{
t && t != "" && (t.match(w) || (p += t + ";"))
}), p == "" ? s.removeAttr("style") : s.attr("style", p)) : f.rgx === !1 && (h = !0, v = !0, s.removeAttr(f.attr))), u.is("table,tr,td,font") && (h = !0), o || "")
}, this)), !e)
if (u.is("img,br,hr"))
{
r += f,
u = null;
break
}
else if (h && !u.attr("notkeep"))
u.is("table,tr,td") ? (f = this.fixTableTransform(f), r += this.toBB(n("<span>").html(f)), u = null) : u.empty().html("<span>" + f + "<\/span>");
else
{
u.is("iframe") ? r += f : (u.empty().html(f), r += this.toBB(u), u = null);
break
}
}
if (!u || u.is("iframe,img"))
return !0;
r += this.toBB(u)
}
}, this)), r.replace(/\uFEFF/g, ""), r) : ""
}, getHTML: function(t, i, r)
{
if (!this.options.bbmode && !i)
return this.$body.html();
r || (t = t.replace(/</g, "&lt;").replace(/\{/g, "&#123;").replace(/\}/g, "&#125;")),
t = t.replace(/\[code\]([\s\S]*?)\[\/code\]/g, function(n)
{
return n = n.substr("[code]".length, n.length - "[code]".length - "[/code]".length).replace(/\[/g, "&#91;").replace(/\]/g, "&#93;"), "[code]" + n + "[/code]"
}),
n.each(this.options.btnlist, n.proxy(function(i, r)
{
if (r != "|" && r != "-")
{
if (!this.options.allButtons[r] || !this.options.allButtons[r].transform)
return !0;
n.each(this.options.allButtons[r].transform, n.proxy(function(i, r)
{
var e,
s,
f,
o,
u;
for (i = i.replace(/\n/g, ""), e = [], r = r.replace(/(\(|\)|\[|\]|\.|\*|\?|\:|\\|\\)/g, "\\$1"), r = r.replace(/\{(.*?)(\\\[.*?\\\])*\}/gi, n.proxy(function(n, t, i)
{
return (e.push(t), i) ? (i = i.replace(/\\/g, ""), "(" + i + "*?)") : "([\\s\\S]*?)"
}, this)), s = 0; (f = new RegExp(r, "mgi").exec(t)) != null; )
f && (o = {}, n.each(e, n.proxy(function(n, t)
{
o[t] = f[n + 1]
}, this)), u = i, u = u.replace(/\{(.*?)(\[.*?\])\}/g, "{$1}"), u = this.strf(u, o), t = t.replace(f[0], u))
}, this))
}
}, this)),
n.each(this.options.systr, function(n, i)
{
i = i.replace(/(\(|\)|\[|\]|\.|\*|\?|\:|\\|\\)/g, "\\$1").replace(" ", "\\s"),
t = t.replace(new RegExp(i, "g"), n)
});
var u=n(this.elFromString("<div>" + t + "<\/div>"));
return this.getHTMLSmiles(u), u.html()
}, getHTMLSmiles: function(t)
{
n(t).contents().filter(function()
{
return this.nodeType == 3
}).each(n.proxy(this.smileRPL, this))
}, smileRPL: function(t, i)
{
var r=i.data;
n.each(this.options.smileList, n.proxy(function(t, u)
{
var f=r.indexOf(u.bbcode),
e,
o;
if (f != -1)
return e = r.substring(f + u.bbcode.length, r.length), o = document.createTextNode(e), i.data = r = i.data.substr(0, f), n(i).after(o).after(this.strf(u.img, this.options)), this.getHTMLSmiles(i.parentNode), !1;
this.getHTMLSmiles(i)
}, this))
}, setUID: function(t, i)
{
var r="wbbid_" + ++this.lastid;
return t && n(t).attr(i || "id", r), r
}, keysToLower: function(t)
{
return n.each(t, function(n, i)
{
n != n.toLowerCase() && (delete t[n], t[n.toLowerCase()] = i)
}), t
}, strf: function(t, i)
{
return i = this.keysToLower(n.extend({}, i)), t.replace(/\{([\w\.]*)\}/g, function(t, r)
{
r = r.toLowerCase();
var f=r.split("."),
u=i[f.shift().toLowerCase()];
return n.each(f, function()
{
u = u[this]
}), u === null || u === undefined ? "" : u
})
}, elFromString: function(t)
{
if (t.indexOf("<") != -1 && t.indexOf(">") != -1)
{
var i=document.createElement("SPAN");
return n(i).html(t), this.setUID(i, "wbb"), n(i).contents().size() > 1 ? i : i.firstChild
}
return document.createTextNode(t)
}, isContain: function(t, i)
{
while (t && !n(t).hasClass("wysibb"))
{
if (n(t).is(i))
return t;
if (t)
t = t.parentNode;
else
return null
}
}, isBBContain: function(n)
{
for (var r=this.getCursorPosBB(), f=this.prepareRGX(n), e=new RegExp(f, "g"), i, u=0, t; (i = e.exec(this.txtArea.value)) != null; )
{
if (t = this.txtArea.value.indexOf(i[0], u), r > t && r < t + i[0].length)
return [i, t];
u = t + 1
}
}, prepareRGX: function(n)
{
return n.replace(/(\[|\]|\)|\(|\.|\*|\?|\:|\||\\)/g, "\\$1").replace(/\{.*?\}/g, "([\\s\\S]*?)")
}, checkForLastBR: function(t)
{
var i,
r;
t || (i = this.body),
t.nodeType == 3 && (t = t.parentNode),
i = n(t),
i.is("span[id*='wbbid']") && (i = i.parent()),
this.options.bbmode === !1 && i.is("div,blockquote,code") && i.contents().size() > 0 && (r = i[0].lastChild, (!r || r && r.tagName != "BR") && i.append("<br/>")),
this.$body.contents().size() > 0 && this.body.lastChild.tagName != "BR" && this.$body.append("<br/>")
}, getAttributeList: function(t)
{
var i=[];
return n.each(t.attributes, function(n, t)
{
t.specified && i.push(t.name)
}), i
}, clearFromSubInsert: function(t, i)
{
if (this.options.allButtons[i] && this.options.allButtons[i].rootSelector)
{
var r=n("<div>").html(t);
return n.each(this.options.allButtons[i].rootSelector, n.proxy(function(t, i)
{
var u=!1,
f;
return typeof this.options.rules[i][0][1].seltext != "undefined" && (u = this.options.rules[i][0][1].seltext.sel), f = !0, r.find("*").each(function()
{
n(this).is(i) && (u && u.sel ? n(this).replaceWith(n(this).find(u.sel.toLowerCase()).html()) : n(this).replaceWith(n(this).html()), f = !1)
}), f
}, this)), r.html()
}
return t
}, splitPrevNext: function(t)
{
t.nodeType == 3 && (t = t.parentNode);
var i=this.filterByNode(t).replace(/\:eq.*$/g, "");
n(t.nextSibling).is(i) && (n(t).append(n(t.nextSibling).html()), n(t.nextSibling).remove()),
n(t.previousSibling).is(i) && (n(t).prepend(n(t.previousSibling).html()), n(t.previousSibling).remove())
}, modeSwitch: function()
{
this.options.bbmode ? (this.$body.html(this.getHTML(this.$txtArea.val())), this.$txtArea.hide().removeAttr("wbbsync").val(""), this.$body.css("min-height", this.$txtArea.height()).show().focus()) : (this.$txtArea.val(this.getBBCode()).css("min-height", this.$body.height()), this.$body.hide(), this.$txtArea.show().focus()),
this.options.bbmode = !this.options.bbmode
}, clearEmpty: function()
{
function t()
{
if (!n(this).is("span,font,a,b,i,u,s"))
return !1;
if (n(this).hasClass("wbbtab") || n.trim(n(this).html()).length != 0)
{
if (n(this).children().size() > 0 && (n(this).children().filter(t).remove(), n(this).html().length == 0 && this.tagName != "BODY"))
return !0
}
else
return !0
}
this.$body.children().filter(t).remove()
}, dropdownclick: function(t, i, r)
{
var u=n(r.currentTarget).closest(t);
u.hasClass("dis") || (u.attr("wbbshow") ? (u.removeAttr("wbbshow"), n(document).unbind("mousedown", this.dropdownhandler), document && n(document).unbind("mousedown", this.dropdownhandler), this.lastRange = !1) : (this.saveRange(), this.$editor.find("*[wbbshow]").each(function(t, i)
{
n(i).removeClass("on").find(n(i).attr("wbbshow")).hide().end().removeAttr("wbbshow")
}), u.attr("wbbshow", i), n(document.body).bind("mousedown", n.proxy(function(n)
{
this.dropdownhandler(u, t, i, n)
}, this)), this.$body && this.$body.bind("mousedown", n.proxy(function(n)
{
this.dropdownhandler(u, t, i, n)
}, this))), u.find(i).toggle(), u.toggleClass("on"))
}, dropdownhandler: function(t, i, r, u)
{
n(u.target).parents(i).size() == 0 && (t.removeClass("on").find(r).hide(), n(document).unbind("mousedown", this.dropdownhandler), this.$body && this.$body.unbind("mousedown", this.dropdownhandler))
}, rgbToHex: function(n)
{
var t,
i;
return n.substr(0, 1) == "#" ? n : n.indexOf("rgb") == -1 ? (t = parseInt(n), t = (t & 255) << 16 | t & 65280 | (t & 16711680) >>> 16, "#" + t.toString(16)) : (i = /(.*?)rgb\((\d+),\s*(\d+),\s*(\d+)\)/.exec(n), "#" + this.dec2hex(parseInt(i[2])) + this.dec2hex(parseInt(i[3])) + this.dec2hex(parseInt(i[4])))
}, dec2hex: function(n)
{
return n > 15 ? n.toString(16) : "0" + n.toString(16)
}, sync: function()
{
this.options.bbmode ? this.$body.html(this.getHTML(this.txtArea.value, !0)) : this.$txtArea.attr("wbbsync", 1).val(this.getBBCode())
}, clearDefaultPrompt: function()
{
var n=this.$txtArea.attr("defaultprompt");
this.options.bbmode ? this.$txtArea.val().indexOf(n) === 0 && this.$txtArea.val("") : this.$body.html().indexOf(n) === 0 && this.$body.html("")
}, clearPaste: function(t)
{
var i=n(t);
n.each(this.options.rules, n.proxy(function(t, r)
{
var u=i.find(t).attr("wbbkeep", 1),
f;
u.size() > 0 && (f = r[0][1], n.each(f, function(n, t)
{
t.sel && u.find(t.sel).attr("wbbkeep", 1)
}))
}, this)),
i.find("*[wbbkeep!='1']").each(n.proxy(function(t, i)
{
var r=n(i);
r.is("div,p") && (r.children().size() == 0 || i.lastChild.tagName != "BR") && r.after("<br/>")
}, this)),
i.find("*[wbbkeep]").removeAttr("wbbkeep").removeAttr("style"),
n.log(i.html()),
i.html(this.getHTML(this.toBB(i), !0)),
n.log(i.html())
}, sortArray: function(n, t)
{
return n.sort(function(n, i)
{
return (n.length - i.length) * (t || 1)
}), n
}, smileFind: function()
{
if (this.options.smilefind)
{
var t=n(this.options.smilefind).find("img[alt]");
t.size() > 0 && (this.options.smileList = [], t.each(n.proxy(function(t, i)
{
var r=n(i);
this.options.smileList.push({
title: r.attr("title"), bbcode: r.attr("alt"), img: r.removeAttr("alt").removeAttr("title")[0].outerHTML
})
}, this)))
}
}, destroy: function()
{
this.$editor.replaceWith(this.$txtArea),
this.$txtArea.removeClass("wysibb-texarea").show(),
this.$modal.remove(),
this.$txtArea.data("wbb", null)
}, pressTab: function(n)
{
n && n.which == 9 && (n.preventDefault && n.preventDefault(), this.options.bbmode ? this.insertAtCursor("   ", !1) : this.insertAtCursor('<span class="wbbtab">﻿<\/span>', !1))
}, removeLastBodyBR: function()
{
this.body.lastChild && this.body.lastChild.nodeType != 3 && this.body.lastChild.tagName == "BR" && (this.body.removeChild(this.body.lastChild), this.removeLastBodyBR())
}, traceTextareaEvent: function(t)
{
n(t.target).closest("div.wysibb").size() == 0 && (n(document.activeElement).is("div.wysibb-body") && this.saveRange(), setTimeout(n.proxy(function()
{
var i=this.$txtArea.val();
this.options.bbmode !== !1 || i == "" || n(t.target).closest("div.wysibb").size() != 0 || this.$txtArea.attr("wbbsync") || (this.selectLastRange(), this.insertAtCursor(this.getHTML(i, !0)), this.$txtArea.val("")),
n(document.activeElement).is("div.wysibb-body") && (this.lastRange = !1)
}, this), 100))
}, txtAreaInitContent: function()
{
this.$body.html(this.getHTML(this.txtArea.value, !0))
}, getValidationRGX: function(n)
{
return n.match(/\[\S+\]/) ? n.replace(/.*(\\*\[\S+\]).*/, "$1") : ""
}, smileConversion: function()
{
var t,
i;
this.options.smileList && this.options.smileList.length > 0 && (t = this.getSelectNode(), t.nodeType == 3 && (i = t.data, i.length >= 2 && !this.isInClearTextBlock(t) && n(t).parents("a").size() == 0 && n.each(this.options.srules, n.proxy(function(r, u)
{
var e=u[0],
f=i.indexOf(e);
if (f != -1)
{
var s=i.substring(f + e.length, i.length),
h=document.createTextNode(s),
o=document.createElement("SPAN");
return t.data = t.data.substr(0, f), n(t).after(h).after(o).after(this.strf(u[1], this.options)), this.selectNode(o), !1
}
}, this))))
}, isInClearTextBlock: function()
{
if (this.cleartext)
{
var t=!1;
return n.each(this.cleartext, n.proxy(function(n, i)
{
if (this.queryState(i))
return t = i, !1
}, this)), t
}
return !1
}, wrapAttrs: function(t)
{
return n.each(this.options.attrWrap, function(n, i)
{
t = t.replace(i + '="', "_" + i + '="')
}), t
}, unwrapAttrs: function(t)
{
return n.each(this.options.attrWrap, function(n, i)
{
t = t.replace("_" + i + '="', i + '="')
}), t
}, disNonActiveButtons: function()
{
this.isInClearTextBlock() ? this.$toolbar.find(".wysibb-toolbar-btn:not(.on,.mswitch)").addClass("dis") : this.$toolbar.find(".wysibb-toolbar-btn.dis").removeClass("dis")
}, setCursorByEl: function(t)
{
var i=document.createTextNode("﻿");
n(t).after(i),
this.selectNode(i)
}, imgListeners: function()
{
n(document).on("mousedown", n.proxy(this.imgEventHandler, this))
}, imgEventHandler: function(t)
{
var i=n(t.target);
this.hasWrapedImage && (i.closest(".wbb-img,#wbbmodal").size() == 0 || i.hasClass("wbb-cancel-button")) && (this.$body.find(".imgWrap ").each(function()
{
n.log("Removed imgWrap block"),
n(this).replaceWith(n(this).find("img"))
}), this.hasWrapedImage = !1, this.updateUI()),
i.is("img") && i.closest(".wysibb-body").size() > 0 && (i.wrap("<span class='imgWrap'><\/span>"), this.hasWrapedImage = i, this.$body.focus(), this.selectNode(i.parent()[0]))
}, showModal: function(t, i, r)
{
var f,
u,
e,
o;
n.log("showModal: " + t),
window.allowModal = !0,
this.saveRange(),
f = this.$modal.find(".wbbm-content").html(""),
u = this.$modal.find(".wbbm").removeClass("hastabs"),
this.$modal.find("span.wbbm-title-text").html(i.title),
i.tabs && i.tabs.length > 1 && (u.addClass("hastabs"), e = n('<div class="wbbm-tablist">').appendTo(f).append("<ul>").children("ul"), n.each(i.tabs, n.proxy(function(n, t)
{
n == 0 && (t.on = "on"),
e.append(this.strf("<li class=\"{on}\" onClick=\"$(this).parent().find('.on').removeClass('on');$(this).addClass('on');$(this).parents('.wbbm-content').find('.tab-cont').hide();$(this).parents('.wbbm-content').find('.tab" + n + "').show()\">{title}<\/li>", t))
}, this))),
i.width && u.css("width", i.width),
o = n('<div class="wbbm-cont">').appendTo(f),
r ? u.find("#wbbm-remove").show() : u.find("#wbbm-remove").hide(),
n.each(i.tabs, n.proxy(function(t, i)
{
var u=n("<div>").addClass("tab-cont tab" + t).attr("tid", t).appendTo(o);
t > 0 && u.hide(),
i.html ? u.html(this.strf(i.html, this.options)) : n.each(i.input, n.proxy(function(t, i)
{
i.value = r[i.param.toLowerCase()],
i.param.toLowerCase() != "seltext" || i.value && i.value != "" || (i.value = this.getSelectText(this.options.bbmode)),
i.value && i.value.indexOf("<span id='wbbid") == 0 && n(i.value).is("span[id*='wbbid']") && (i.value = n(i.value).html()),
i.type && i.type == "div" ? u.append(this.strf('<div class="wbbm-inp-row"><label>{title}<\/label><div class="inp-text div-modal-text" contenteditable="true" name="{param}">{value}<\/div><\/div>', i)) : u.append(this.strf('<div class="wbbm-inp-row"><label>{title}<\/label><input class="inp-text modal-text" type="text" name="{param}" value="{value}"/><\/div>', i))
}, this))
}, this)),
n.isFunction(i.onLoad) && i.onLoad.call(this, t, i, r),
u.find("#wbbm-submit").click(n.proxy(function()
{
var e,
u,
f;
n.isFunction(i.onSubmit) && (e = i.onSubmit.call(this, t, i, r), e === !1) || (u = {}, f = !0, this.$modal.find(".wbbm-inperr").remove(), this.$modal.find(".wbbm-brdred").removeClass("wbbm-brdred"), n.each(this.$modal.find(".tab-cont:visible .inp-text"), n.proxy(function(t, r)
{
var s=n(r).parents(".tab-cont").attr("tid"),
h=n(r).attr("name").toLowerCase(),
e="",
o;
e = n(r).is("input,textrea,select") ? n(r).val() : n(r).html(),
o = i.tabs[s].input[t].validation,
typeof o != "undefined" && (e.match(new RegExp(o, "i")) || (f = !1, n(r).after('<span class="wbbm-inperr">' + CURLANG.validation_err + "<\/span>").addClass("wbbm-brdred"))),
u[h] = e
}, this)), f && (n.log("Last range: " + this.lastRange), this.selectLastRange(), r && this.wbbRemoveCallback(t, !0), this.wbbInsertCallback(t, u), this.closeModal(), this.updateUI()))
}, this)),
u.find("#wbbm-remove").click(n.proxy(function()
{
this.selectLastRange(),
this.wbbRemoveCallback(t),
this.closeModal(),
this.updateUI()
}, this)),
n(document.body).css("overflow", "hidden"),
n("body").height() > n(window).height() && n(document.body).css("padding-right", "18px"),
this.$modal.show(),
this.isMobile ? u.css("margin-top", "10px") : u.css("margin-top", (n(window).height() - u.outerHeight()) / 3 + "px"),
setTimeout(n.proxy(function()
{
this.$modal.find(".inp-text:visible")[0].focus()
}, this), 10)
}, escModal: function(n)
{
n.which == 27 && this.closeModal()
}, closeModal: function()
{
return n(document.body).css("overflow", "auto").css("padding-right", "0").unbind("keyup", this.escModal), this.$modal.find("#wbbm-submit,#wbbm-remove").unbind("click"), this.$modal.hide(), this.lastRange = !1, window.allowModal = !1, this
}, getParams: function(t, i, r)
{
var f={},
o,
s,
u,
e,
h;
return this.options.bbmode ? (o = i.match(/\{[\s\S]+?\}/g), i = this.prepareRGX(i), s = new RegExp(i, "g"), u = this.txtArea.value, r > 0 && (u = u.substr(r, u.length - r)), e = s.exec(u), e && n.each(o, function(n, t)
{
f[t.replace(/\{|\}/g, "").replace(/"/g, "'").toLowerCase()] = e[n + 1]
})) : (h = this.options.rules[i][0][1], n.each(h, n.proxy(function(i, r)
{
var u="",
o=r.sel !== !1 ? u = n(t).find(r.sel) : n(t),
e;
u = r.attr !== !1 ? o.attr(r.attr) : o.html(),
u && (r.rgx !== !1 && (e = u.match(new RegExp(r.rgx)), e && e.length == 2 && (u = e[1])), f[i] = u.replace(/"/g, "'"))
}, this))), f
}, imgLoadModal: function()
{
n.log("imgLoadModal"),
this.options.imgupload === !0 ? (this.$modal.find("#imguploader").dragfileupload({
url: this.strf(this.options.img_uploadurl, this.options), extraParams: {
maxwidth: this.options.img_maxwidth, maxheight: this.options.img_maxheight
}, themePrefix: this.options.themePrefix, themeName: this.options.themeName, success: n.proxy(function(n)
{
this.$txtArea.insertImage(n.image_link, n.thumb_link),
this.closeModal(),
this.updateUI()
}, this)
}), this.$modal.find("#fileupl").bind("change", function()
{
n("#fupform").submit()
}), this.$modal.find("#fupform").bind("submit", n.proxy(function(t)
{
n(t.target).parents("#imguploader").hide().after('<div class="loader"><img src="' + this.options.themePrefix + "/" + this.options.themeName + '/img/loader.gif" /><br/><span>' + CURLANG.loading + "<\/span><\/div>").parent().css("text-align", "center")
}, this))) : (this.$modal.find(".hastabs").removeClass("hastabs"), this.$modal.find("#imguploader").parents(".tab-cont").remove(), this.$modal.find(".wbbm-tablist").remove())
}, imgSubmitModal: function()
{
n.log("imgSubmitModal")
}, printObjectInIE: function(t)
{
try
{
n.log(JSON.stringify(t))
}
catch(i) {}
}, checkFilter: function(t, i)
{
n.log("node: " + n(t).get(0).outerHTML + " filter: " + i + " res: " + n(t).is(i.toLowerCase()))
}, debug: function(t)
{
if (this.options.debug === !0)
{
var i=(new Date).getTime();
typeof console != "undefined" ? console.log(i - this.startTime + " ms: " + t) : n("#exlog").append("<p>" + (i - this.startTime) + " ms: " + t + "<\/p>"),
this.startTime = i
}
}, isChrome: function()
{
return window.chrome ? !0 : !1
}, fixTableTransform: function(t)
{
return t ? n.inArray("table", this.options.buttons) == -1 ? t.replace(/\<(\/*?(table|tr|td|tbody))[^>]*\>/ig, "") : t.replace(/\<(\/*?(table|tr|td))[^>]*\>/ig, "[$1]".toLowerCase()).replace(/\<\/*tbody[^>]*\>/ig, "") : ""
}
},
n.log = function(t)
{
typeof wbbdebug != "undefined" && wbbdebug === !0 && (typeof console != "undefined" ? console.log(t) : n("#exlog").append("<p>" + t + "<\/p>"))
},
n.fn.wysibb = function(t)
{
return this.each(function()
{
var i=n(this).data("wbb");
i || new n.wysibb(this, t)
})
},
n.fn.wdrag = function(t)
{
t.scope || (t.scope = this);
var i={
x: 0, y: 0, height: 0
},
r;
t.scope.drag_mousedown = function(u)
{
u.preventDefault(),
i = {
x: u.pageX, y: u.pageY, height: t.height, sheight: t.scope.$body.height()
},
r = !0,
n(document).bind("mousemove", n.proxy(t.scope.drag_mousemove, this)),
n(this).addClass("drag")
},
t.scope.drag_mouseup = function(i)
{
r === !0 && (i.preventDefault(), n(document).unbind("mousemove", t.scope.drag_mousemove), n(this).removeClass("drag"), r = !1)
},
t.scope.drag_mousemove = function(n)
{
var f,
u,
r;
n.preventDefault(),
f = 0,
u = 0,
t.axisX && (f = n.pageX - i.x),
t.axisY && (u = n.pageY - i.y),
u != 0 && (r = i.sheight + u, r > i.height && r <= t.scope.options.resize_maxheight && (t.scope.options.bbmode == !0 ? t.scope.$txtArea.css(t.scope.options.autoresize === !0 ? "min-height" : "height", r + "px") : t.scope.$body.css(t.scope.options.autoresize === !0 ? "min-height" : "height", r + "px")))
},
n(this).bind("mousedown", t.scope.drag_mousedown),
n(document).bind("mouseup", n.proxy(t.scope.drag_mouseup, this))
},
n.fn.getDoc = function()
{
return this.data("wbb").doc
},
n.fn.getSelectText = function(n)
{
return this.data("wbb").getSelectText(n)
},
n.fn.bbcode = function(n)
{
return typeof n != "undefined" ? (this.data("wbb").options.bbmode ? this.data("wbb").$txtArea.val(n) : this.data("wbb").$body.html(this.data("wbb").getHTML(n)), this) : this.data("wbb").getBBCode()
},
n.fn.htmlcode = function(n)
{
if (!this.data("wbb").options.onlyBBMode && this.data("wbb").inited === !0)
return typeof n != "undefined" ? (this.data("wbb").$body.html(n), this) : this.data("wbb").getHTML(this.data("wbb").$txtArea.val())
},
n.fn.getBBCode = function()
{
return this.data("wbb").getBBCode()
},
n.fn.getHTML = function()
{
var n=this.data("wbb");
return n.getHTML(n.$txtArea.val())
},
n.fn.getHTMLByCommand = function(n, t)
{
return this.data("wbb").getHTMLByCommand(n, t)
},
n.fn.getBBCodeByCommand = function(n, t)
{
return this.data("wbb").getBBCodeByCommand(n, t)
},
n.fn.insertAtCursor = function(n, t)
{
return this.data("wbb").insertAtCursor(n, t), this.data("wbb")
},
n.fn.execCommand = function(n, t)
{
return this.data("wbb").execCommand(n, t), this.data("wbb")
},
n.fn.insertImage = function(n, t)
{
var i=this.data("wbb"),
r=t ? i.getCodeByCommand("link", {
url: n, seltext: i.getCodeByCommand("img", {src: t})
}) : i.getCodeByCommand("img", {src: n});
return this.insertAtCursor(r), i
},
n.fn.sync = function()
{
return this.data("wbb").sync(), this.data("wbb")
},
n.fn.destroy = function()
{
this.data("wbb").destroy()
},
n.fn.queryState = function(n)
{
return this.data("wbb").queryState(n)
}
}(jQuery142),
function(n)
{
function t(t, i)
{
this.$block = n(t),
this.opt = n.extend({
url: !1, success: !1, extraParams: !1, fileParam: "img", validation: ".(jpg|png|gif|jpeg)$", t1: CURLANG.fileupload_text1, t2: CURLANG.fileupload_text2
}, i)
}
n.fn.dragfileupload = function(n)
{
return this.each(function()
{
var i=new t(this, n);
i.init()
})
},
t.prototype = {
init: function()
{
if (window.FormData != null)
{
this.$block.addClass("drag"),
this.$block.prepend('<div class="p2">' + this.opt.t2 + "<\/div>"),
this.$block.prepend('<div class="p">' + this.opt.t1 + "<\/div>"),
this.$block.bind("dragover", function()
{
return n(this).addClass("dragover"), !1
}),
this.$block.bind("dragleave", function()
{
return n(this).removeClass("dragover"), !1
});
var i=n.proxy(function(n)
{
var t=parseInt(n.loaded / n.total * 100, 10);
this.$loader.children("span").text(CURLANG.loading + ": " + t + "%")
}, this),
t=jQuery.ajaxSettings.xhr();
t.upload && t.upload.addEventListener("progress", i, !1),
this.$block[0].ondrop = n.proxy(function(i)
{
var u,
r;
if (i.preventDefault(), this.$block.removeClass("dragover"), u = i.dataTransfer.files[0], this.opt.validation && !u.name.match(new RegExp(this.opt.validation)))
return this.error(CURLANG.validation_err), !1;
r = new FormData,
r.append(this.opt.fileParam, u),
this.opt.extraParams && n.each(this.opt.extraParams, function(n, t)
{
r.append(n, t)
}),
this.$loader = n('<div class="loader"><img src="' + this.opt.themePrefix + "/" + this.opt.themeName + '/img/loader.gif" /><br/><span>' + CURLANG.loading + "<\/span><\/div>"),
this.$block.html(this.$loader),
n.ajax({
type: "POST", url: this.opt.url, data: r, processData: !1, contentType: !1, xhr: function()
{
return t
}, dataType: "json", success: n.proxy(function(n)
{
n && n.status == 1 ? this.opt.success(n) : this.error(n.msg || CURLANG.error_onupload)
}, this), error: n.proxy(function()
{
this.error(CURLANG.error_onupload)
}, this)
})
}, this)
}
}, error: function(n)
{
this.$block.find(".upl-error").remove().end().append('<span class="upl-error">' + n + "<\/span>").addClass("wbbm-brdred")
}
}
}(jQuery142);